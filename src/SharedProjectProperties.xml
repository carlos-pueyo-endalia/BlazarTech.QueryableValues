<Project>
	<PropertyGroup>
		<RootNamespace>BlazarTech.QueryableValues</RootNamespace>
		<AssemblyName>BlazarTech.QueryableValues.SqlServer</AssemblyName>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<RepositoryUrl>https://github.com/yv989c/BlazarTech.QueryableValues</RepositoryUrl>
		<Authors>Carlos Villegas</Authors>
		<Product>BlazarTech.QueryableValues</Product>
		<PackageId>BlazarTech.QueryableValues.SqlServer</PackageId>
		<Description>Allows you to efficiently compose an IEnumerable&lt;T&gt; in your Entity Framework Core queries when using the SQL Server Database Provider. This is accomplished by using the AsQueryableValues extension method available on the DbContext class. Everything is evaluated on the server with a single round trip, in a way that preserves the query's execution plan, even when the values behind the IEnumerable&lt;T&gt; are changed on subsequent executions.</Description>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageProjectUrl>https://github.com/yv989c/BlazarTech.QueryableValues</PackageProjectUrl>
		<PackageTags>Entity Framework Core entity-framework-core EF Data O/RM EntityFramework EntityFrameworkCore EFCore SQL Server IQueryable IEnumerable Queryable Values MemoryJoin BulkInsertTempTableAsync WhereBulkContains Extension Extensions Memory Join Contains Performance LINQ</PackageTags>
		<PackageIcon>icon.png</PackageIcon>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
		<Nullable>enable</Nullable>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Extensions.ObjectPool" Version="6.0.6" />
	</ItemGroup>
	
	<ItemGroup>
		<None Include="..\..\docs\images\icon.png" Visible="false">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
		<None Include="..\..\docs\README.md" Visible="false">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
	</ItemGroup>

	<PropertyGroup Condition="'$(Configuration)'=='Release'">
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
	</PropertyGroup>

	<ItemGroup>
		<Compile Include="..\QueryableValues.SqlServer\*.cs" />
		<Compile Include="..\QueryableValues.SqlServer\Builders\*.cs">
			<Link>Builders\%(RecursiveDir)\%(FileName)%(Extension)</Link>
		</Compile>
		<Compile Include="..\QueryableValues.SqlServer\Serializers\*.cs">
			<Link>Serializers\%(RecursiveDir)\%(FileName)%(Extension)</Link>
		</Compile>
		<Compile Include="..\QueryableValues.SqlServer\SqlServer\*.cs">
			<Link>SqlServer\%(RecursiveDir)\%(FileName)%(Extension)</Link>
		</Compile>
	</ItemGroup>

	<ItemGroup Condition="'$(Configuration)'!='Release'">
		<InternalsVisibleTo Include="BlazarTech.QueryableValues.SqlServer.Tests.EFCore3" />
		<InternalsVisibleTo Include="BlazarTech.QueryableValues.SqlServer.Tests.EFCore5" />
		<InternalsVisibleTo Include="BlazarTech.QueryableValues.SqlServer.Tests.EFCore6" />
	</ItemGroup>
</Project>